name: Flutter Windows Build

on:
  push:
    branches:
      - master
  workflow_dispatch:  # 允许手动触发

# 并发策略
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-windows:
    name: Build Windows Application
    runs-on: windows-latest

    steps:
      - name: 代码检出
        uses: actions/checkout@v4

      - name: 设置 Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.19.0"  # 指定 Flutter 版本

      - name: 检查 Flutter 环境
        run: flutter doctor -v

      - name: 下载依赖
        run: flutter pub get

      - name: 生成代码
        run: dart run build_runner build --delete-conflicting-outputs

      - name: 获取版本号
        shell: pwsh
        run: |
          $content = Get-Content -Raw pubspec.yaml
          if ($content -match 'version:\s*([^\r\n]+)') {
            $version = $matches[1].Trim() -replace '\+', '-'
            echo "VERSION=$version" | Out-File -Append -Encoding utf8 -FilePath $env:GITHUB_ENV
          }

      - name: 打印版本号
        run: |
          echo "Version: ${{ env.VERSION }}"

      - name: 构建 Windows 应用
        run: flutter build windows --release

      - name: 创建应用发布包
        shell: pwsh
        run: |
          $appName = (Get-Content pubspec.yaml | Select-String 'name:' | ForEach-Object { $_.Line.Split(':')[1].Trim() })
          if (-not $appName) { $appName = "flutter_app" }
          
          # 创建包含所有文件的 ZIP 包
          $zipName = "$appName-windows-${{ env.VERSION }}.zip"
          Compress-Archive -Path "build/windows/runner/Release/*" -DestinationPath $zipName
          
          # 也创建一个包含整个 Release 文件夹的包（可选）
          Compress-Archive -Path "build/windows/runner/Release" -DestinationPath "$appName-complete-${{ env.VERSION }}.zip"

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            *.zip
          retention-days: 30

      - name: 创建 GitHub Release (仅限标签推送)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: *.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Windows 应用程序构建
            - 版本: ${{ env.VERSION }}
            - 构建时间: ${{ github.event.head_commit.timestamp }}
            - 提交: ${{ github.sha }}
